<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>at.humanmilkbank</groupId>
    <artifactId>human-milk-bank-parent</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <developers>
        <developer>
            <name>fs-green</name>
        </developer>
    </developers>

    <scm>
        <url>https://github.com/fs-green/human-milk-bank.git</url>
        <connection>https://github.com/fs-green/human-milk-bank.git</connection>
    </scm>

    <licenses>
        <license>
            <name>GNU GENERAL PUBLIC LICENSE 3.0</name>
            <url>https://www.gnu.org/licenses/gpl-3.0.html</url>
        </license>
    </licenses>

    <modules>
        <module>human-milk-bank-domainmodel</module>
        <module>human-milk-bank-dbrepo</module>
        <module>human-milk-bank-business</module>
        <module>human-milk-bank-ui</module>
    </modules>

    <properties>
        <!-- Maven build configurations -->
        <project.build.source>11</project.build.source>
        <project.build.target>11</project.build.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- Spring -->
        <!-- Apache 2.0 -->
        <javafx-weaver-spring-boot-starter.version>1.3.0</javafx-weaver-spring-boot-starter.version>
        <spring.version>5.2.2.RELEASE</spring.version>

        <!-- OpenJFX -->
        <!-- GPL 2.0 -->
        <open.javafx.version>11</open.javafx.version>

        <!-- CDDL & GPL 2.0 -->
        <javax.annotation-api.version>1.3.2</javax.annotation-api.version>

        <!-- Database -->

        <!-- Apache 2.0 -->
        <apache.commons.lang3.version>3.9</apache.commons.lang3.version>
        <commons-io.version>2.6</commons-io.version>

        <!-- Logger -->
        <!-- Apache 2.0 -->
        <log4j.version>1.2.17</log4j.version>

        <!-- Test Frameworks -->
        <!-- EPL 1.0 -->
        <junit.version>4.13</junit.version>
        <!-- MIT -->
        <mockito.all.version>1.10.19</mockito.all.version>
        <!-- LGPL 2.1 -->
        <dbunit.version>2.7.0</dbunit.version>
        <!-- Apache 2.0 -->
        <unitils-core.version>3.4.6</unitils-core.version>
        <!-- Apache 2.0 -->
        <arquillian.junit.container.version>1.4.0.Final</arquillian.junit.container.version>
        <!-- CC0 1.0 Public -->
        <arquillian.weld.ee.embedded.1.1.version>1.0.0.Final</arquillian.weld.ee.embedded.1.1.version>
        <!-- MIT -->
        <cukespace-core.version>1.6.7</cukespace-core.version>

        <!-- Maven Plugins -->
        <!-- Apache 2.0 -->
        <maven.compiler.plugin.version>3.8.0</maven.compiler.plugin.version>
        <maven.compiler.plugin.source>11</maven.compiler.plugin.source>
        <maven.compiler.plugin.target>11</maven.compiler.plugin.target>
        <maven.war.plugin.version>3.2.0</maven.war.plugin.version>
        <maven.assembly.plugin.version>3.1.0</maven.assembly.plugin.version>
        <maven.surefire.plugin.version>2.21.0</maven.surefire.plugin.version>
        <maven.failsafe.plugin.version>2.21.0</maven.failsafe.plugin.version>
        <maven.dependency.plugin.version>3.0.2</maven.dependency.plugin.version>
        <maven-project-info-reports-plugin.version>2.9</maven-project-info-reports-plugin.version>
        <versions-maven-plugin>2.5</versions-maven-plugin>

        <!-- Jacoco -->
        <!-- EPL 1.0 -->
        <jacoco.skip>true</jacoco.skip>
        <jacoco-maven-plugin.version>0.8.2</jacoco-maven-plugin.version>
        <sonar.jacoco.itReportPath>${project.build.directory}/coverage-reports/jacoco-it.exec</sonar.jacoco.itReportPath>
        <sonar.jacoco.reportPath>${project.build.directory}/coverage-reports/jacoco-ut.exec</sonar.jacoco.reportPath>
        <sonar.jacoco.outReportPath>target/jacoco</sonar.jacoco.outReportPath>
        <sonar.jacoco.outItReportPath>target/jacoco-it</sonar.jacoco.outItReportPath>
    </properties>

    <!-- Following Dependencies are used for all submodules -->
    <dependencies>
        <!-- Spring -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <!-- Logger -->
        <!-- log4j -->
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${log4j.version}</version>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <!-- Internal Maven Modules -->
            <dependency>
                <groupId>at.humanmilkbank</groupId>
                <artifactId>human-milk-bank-domainmodel</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>at.humanmilkbank</groupId>
                <artifactId>human-milk-bank-business-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>at.humanmilkbank</groupId>
                <artifactId>human-milk-bank-business-impl</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>at.humanmilkbank</groupId>
                <artifactId>human-milk-bank-dbrepo-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>at.humanmilkbank</groupId>
                <artifactId>human-milk-bank-dbrepo-impl</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!-- Maven Dependencies -->
            <dependency>
                <groupId>net.rgielen</groupId>
                <artifactId>javafx-weaver-spring-boot-starter</artifactId>
                <version>${javafx-weaver-spring-boot-starter.version}</version>
            </dependency>
            <!-- OpenJFX -->
            <dependency>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx</artifactId>
                <version>${open.javafx.version}</version>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-controls</artifactId>
                <version>${open.javafx.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-graphics</artifactId>
                <version>${open.javafx.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-fxml</artifactId>
                <version>${open.javafx.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-base</artifactId>
                <version>${open.javafx.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-web</artifactId>
                <version>${open.javafx.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-media</artifactId>
                <version>${open.javafx.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-swing</artifactId>
                <version>${open.javafx.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.annotation</groupId>
                <artifactId>javax.annotation-api</artifactId>
                <version>${javax.annotation-api.version}</version>
            </dependency>
            <!-- Apache Commons -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${apache.commons.lang3.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>

            <!-- Test Frameworks -->
            <!-- JUnit -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
            </dependency>
            <!-- Arquillian -->
            <dependency>
                <groupId>org.jboss.arquillian.junit</groupId>
                <artifactId>arquillian-junit-container</artifactId>
                <version>${arquillian.junit.container.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian.container</groupId>
                <artifactId>arquillian-weld-ee-embedded-1.1</artifactId>
                <version>${arquillian.weld.ee.embedded.1.1.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- Mockito -->
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-all</artifactId>
                <version>${mockito.all.version}</version>
            </dependency>
            <!-- DbUnit -->
            <dependency>
                <groupId>org.dbunit</groupId>
                <artifactId>dbunit</artifactId>
                <version>${dbunit.version}</version>
            </dependency>
            <!-- Cukespace (Cucumber) -->
            <dependency>
                <groupId>com.github.cukespace</groupId>
                <artifactId>cukespace-core</artifactId>
                <version>${cukespace-core.version}</version>
            </dependency>
            <!-- Unitils -->
            <dependency>
                <groupId>org.unitils</groupId>
                <artifactId>unitils-core</artifactId>
                <version>${unitils-core.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <!-- Maven Dependency Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${maven.dependency.plugin.version}</version>
            </plugin>
            <!-- Versions maven Plugin -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>${versions-maven-plugin}</version>
            </plugin>
            <!-- Maven Project Info Reports Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>${maven-project-info-reports-plugin.version}</version>
            </plugin>
            <!-- Maven Jacoco Plugin -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin.version}</version>
                <configuration>
                    <skip>${jacoco.skip}</skip>
                    <propertyName>jacoco.agent.argLine</propertyName> <!-- default: argLine -->
                </configuration>
                <executions>
                    <execution>
                        <phase>verify</phase>
                        <goals>
                            <goal>report-aggregate</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>prepare-unit-test-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the path to the file which contains the execution data. -->
                            <destFile>${sonar.jacoco.reportPath}</destFile>
                            <!-- Sets the name of the property containing the settings for JaCoCo runtime agent. -->
                            <propertyName>surefireArgLine</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-unit-test-report</id>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the path to the file which contains the execution data. -->
                            <dataFile>${sonar.jacoco.reportPath}</dataFile>
                            <!-- Sets the output directory for the code coverage report. -->
                            <outputDirectory>${sonar.jacoco.outReportPath}</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>prepare-integration-test-agent</id>
                        <goals>
                            <goal>prepare-agent-integration</goal>
                        </goals>
                        <configuration>
                            <includes>
                                <include>at.humanmilkbank.*</include>
                            </includes>
                            <!-- Sets the path to the file which contains the execution data. -->
                            <destFile>${sonar.jacoco.itReportPath}</destFile>
                            <!-- Sets the name of the property containing the settings for JaCoCo runtime agent. -->
                            <propertyName>failsafeArgLine</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-integration-test-report</id>
                        <goals>
                            <goal>report-integration</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the path to the file which contains the execution data. -->
                            <dataFile>${sonar.jacoco.itReportPath}</dataFile>
                            <!-- Sets the output directory for the code coverage report. -->
                            <outputDirectory>${sonar.jacoco.outItReportPath}</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>
                <!-- Maven Compiler Plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven.compiler.plugin.version}</version>
                    <configuration>
                        <source>${maven.compiler.plugin.source}</source>
                        <target>${maven.compiler.plugin.target}</target>
                    </configuration>
                </plugin>
                <!-- Maven Assembly Plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${maven.assembly.plugin.version}</version>
                    <configuration>
                        <descriptorRefs>
                            <descriptorRef>jar-with-dependencies</descriptorRef>
                        </descriptorRefs>
                        <!-- MainClass in mainfest make a executable jar -->
                        <archive>
                            <manifest>
                                <mainClass>FxWeaverSpringBootStarterSampleApplication</mainClass>
                            </manifest>
                        </archive>
                    </configuration>
                    <executions>
                        <execution>
                            <id>make-assembly</id> <!-- this is used for inheritance merges -->
                            <phase>package</phase> <!-- bind to the packaging phase -->
                            <goals>
                                <goal>single</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- Surefire Plugin for Unit Tests -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven.surefire.plugin.version}</version>
                    <configuration>
                        <!-- Sets the VM argument line used when unit tests are run. -->
                        <argLine>${surefireArgLine}</argLine>
                    </configuration>
                </plugin>
                <!-- Failsafe Plugin for Integration Tests -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven.failsafe.plugin.version}</version>
                    <configuration>
                        <includes>
                            <include>**/*IT.java</include>
                        </includes>
                        <reportsDirectory>${project.build.directory}/failsafe-reports</reportsDirectory>
                        <!-- Sets the VM argument line used when integration tests are run. -->
                        <argLine>${failsafeArgLine}</argLine>
                    </configuration>
                    <executions>
                        <execution>
                            <id>integration-test</id>
                            <goals>
                                <goal>integration-test</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>verify</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
